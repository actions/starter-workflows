# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow triggers a CodeThreat scan of your codebase
# and populates GitHub Code Scanning alerts with the identified issues.

# For more information, visit: https://updates.codethreat.com/usage-guide/ci-cd-integrations/github-actions

# Pre-requisites:
# Ensure the following secrets are added to your GitHub repository:
# - ACCESS_TOKEN: CodeThreat > Settings > Access Token > Create
# - GITHUB_TOKEN: GitHub PAT Token needed for retrieving commit, push, or PR information
# - CT_SERVER: Default is https://cloud.codethreat.com
# - ORGNAME: Organization Name in the CodeThreat Platform


name: CodeThreat analysis

on:
  push:
    branches: [ $default-branch, $protected-branches ]
  pull_request:
    branches: [ $default-branch ]
  schedule:
    - cron: $cron-weekly

permissions:
  contents: read # Allows actions/checkout to fetch the code
  issues: write # Required to create issues for detected vulnerabilities
  pull-requests: write # Required to add feedback to pull requests
  security-events: write # Required to upload SARIF results
  actions: read # Only required for a private repository to get the Action run status

jobs:
  codethreat-scan:
    runs-on: ubuntu-latest
    name: CodeThreat Scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        # sets up the Node.js environment needed for the scan
      - name: Run CodeThreat Scanner
        uses: CodeThreat/codethreat-scan-action@master
        # runs the CodeThreat scanner on the checked-out code
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CT_SERVER: ${{ secrets.CT_SERVER }}
          ORGNAME: ${{ secrets.ORGNAME }}
        with:
          FAILED_ARGS: |
            - condition: 'OR'
            - automerge: false
            - sync_scan: true
            # Uncomment and customize the following options as needed:
            # - max_number_of_critical: 10
            # - max_number_of_high: 20
            # - weakness_is: ".*injection,buffer.over.read,mass.assignment"
            # - sca_max_number_of_critical: 5
            # - sca_max_number_of_high: 10
            # - policy_name: Custom Security Policy

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        # uploads the SARIF report generated by the CodeThreat scan to GitHub
        with:
          sarif_file: codethreat.sarif.json
